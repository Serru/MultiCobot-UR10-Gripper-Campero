<?xml version="1.0"?>
<launch>

  <!--Select the ur_control file-->
  <arg name="ur_control" default="ur_control.launch.xml" doc="Select the ur_control file"/>

  <!--Robot description and related parameter files -->
  <arg name="robot_description_file" default="$(find campero_robot_real_gazebo)/launch/load_ur10.launch.xml" doc="Launch file which populates the 'robot_description' parameter."/>
  <arg name="joint_limit_params" default="$(find campero_ur10_description)/config/ur10/joint_limits.yaml"/>
  <arg name="kinematics_params" default="$(find campero_ur10_description)/config/ur10/default_kinematics.yaml"/>
  <arg name="physical_params" default="$(find campero_ur10_description)/config/ur10/physical_parameters.yaml"/>
  <arg name="visual_params" default="$(find campero_ur10_description)/config/ur10/visual_parameters.yaml"/>

  <!-- Controller configuration -->
  <arg name="controller_config_file" default="$(find campero_robot_real_gazebo)/config/ur10_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
  <arg name="controllers" default="joint_state_controller pos_joint_traj_controller gripper" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="joint_group_pos_controller" doc="Controllers that are initally loaded, but not started."/>

  <!-- robot_state_publisher configuration -->
  <arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>
  <arg name="tf_pub_rate" default="125" doc="Rate at which robot_state_publisher should publish transforms."/>

  <!-- Gazebo parameters -->
  <arg name="paused" default="true" doc="Starts Gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts Gazebo gui" />

  <!-- Load urdf on the parameter server -->
  <include file="$(arg robot_description_file)">
    <arg name="joint_limit_params" value="$(arg joint_limit_params)"/>
    <arg name="kinematics_params" value="$(arg kinematics_params)"/>
    <arg name="physical_params" value="$(arg physical_params)"/>
    <arg name="visual_params" value="$(arg visual_params)"/>
  </include>

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="$(arg tf_pub_rate)" />
    <param name="tf_prefix" value="$(arg tf_prefix)" />
  </node>

  <!-- Fake Calibration -->
  <!--node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" /-->

  <!-- get the robot position [Own Script]-->
  <node name="ur10_robot_pose" pkg="campero_robot_real_gazebo" type="ur10_robot_pose.py" respawn="true" />

  <!-- send the arms commands [Own Script]-->
  <node name="cmd_ik_trajectory_pub" pkg="campero_robot_real_gazebo" type="pub_ik_trajectory.py" respawn="true" />

  <!-- send the gripper commands [Own Script]-->
  <node name="cmd_gripper_value_pub" pkg="campero_robot_real_gazebo" type="pub_gripper_cmd.py" respawn="true" />


  <!-- Start the 'driver' (ie: Gazebo in this case) -->
  <include file="$(find campero_robot_real_gazebo)/launch/$(arg ur_control)">
    <arg name="controller_config_file" value="$(arg controller_config_file)"/>
    <arg name="controllers" value="$(arg controllers)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
  </include>
</launch>
